The Almanac of Practices

install dependencies

create backend/app/alembic
                  /api/routes
                  /core
                  /main.py      | from fastapi import FastAPI
                                | app = FastAPI() 
        __init__.py to every folder

api/routes/users.py | from fastapi import APIRouter

add CORS

https://dashboard.ngrok.com/get-started/setup/windows
ngrok http http://localhost:8000

ngrok config add-authtoken 1bgkFQ2q6M1GSAFvi289mUeMMgh_73VY6bgeXbRHgDmhEaYkk
ngrok config add-authtoken 2mVm2DXnDy6XRLrnJOJaVAB54uu_29nh6ghQfkx93BGq1mcAr

npm install -g create-next-app
npm install @twa-dev/sdk jose


app/components/TelegramAuth.jsx     | 
                                    | 
app/layout.js   | <head>
                |   <Script src="https://telegram.org/js/telegram-web-app.js" strategy="beforeInteractive"/>
                | </head>

######## user instance #########
initDataUnsafe: Object
        auth_date: "1727191584"
        chat_instance: "-4783509021205096220"
        chat_type: "sender"
        hash: "acc53b1183d71e487f950912f939f3a769c0203be7427f961111e6f80316ddfa"
        user: Object
                allows_write_to_pm: true
                first_name: "Нина"
                id: 693758237
                language_code: "en"
                last_name: "Булатова"
                username: "h2hydro"
##################################

create database.py, .env, models.py
-------------------------------
sudo su postgres & psql 	| \c coredb; 	| GRANT ALL ON SCHEMA public TO myuser;
#psql DROP DATABASE postgrestapdb;
CREATE DATABASE postgrestapdb;
CREATE USER tapadmin WITH PASSWORD 'postgres';
GRANT ALL PRIVILEGES ON DATABASE postgrescleartdb TO cleart;
ALTER USER cleart CREATEDB;

#GRANT ALL ON DATABASE postgrescleartdb TO cleart;
#ALTER DATABASE postgrescleartdb OWNER TO cleart;
#GRANT USAGE, CREATE ON SCHEMA PUBLIC TO cleart;

-------------------------------

sudo apt-get install libpq-dev python3-dev
pip install psycopg2


sudo -i -u postgres
psql -U postgres -d postgrestapadb #db_name
\dt 
\d table_name
TABLE public.user;


migrationfile.py        | import sqlmodel.sql.sqltypes

env.py  | from core.models import SQLModel
        | from core.database import DATABASE_URL
        | config.set_main_option("sqlalchemy.url", DATABASE_URL)
        | target_metadata = SQLModel.metadata